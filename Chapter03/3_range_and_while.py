#
# % 키워드: 범위, while반복문, break키워드, continue 키워드

# ! (1) 범위
# ? 정수로 이루어진 범위를 만들 때는 range() 함수를 사용합니다.
# ? 1) 매개변수에 숫자를 한 개 넣는 방법
a = range(5)
print(a)
# range(0, 5)

# ? list()함수를 이용해 범위를 리스트로 변경하면 범위 내부에 어떤 값이 들어있는지 확인 할 수 있음.
print(list(range(5)))
# [0, 1, 2, 3, 4]

# ? 2) 매개변수에 숫자를 두 개 넣는 방법
print(list(range(0, 5)))
# [0, 1, 2, 3, 4]
print(list(range(5, 10)))
# [5, 6, 7, 8, 9]

# ? 3) 매개변수에 숫자를 세 개 넣는 방법
print(list(range(0, 10, 2)))  # 2씩 증가
# [0, 2, 4, 6, 8]
print(list(range(0, 10, 3)))  # 3씩 증가
# [0, 3, 6, 9]

# ? 수식에 나누기 연산자를 사용하는 경우, range()함수의 매개변수에는 반드시 '정수'를 입력해야 하기 때문에, 정수나누기 연산자를 맣이 사용함.
n = 10
print(list(range(0, n // 2)))
# [0, 1, 2, 3, 4]


# ! (2) for 반복문: 범위와 함께 사용하기
for i in range(5):
    print(str(i), "= 반복 변수")
# 0 = 반복 변수
# 1 = 반복 변수
# 2 = 반복 변수
# 3 = 반복 변수
# 4 = 반복 변수

for i in range(5, 10):
    print(str(i), "= 반복 변수")
# 5 = 반복 변수
# 6 = 반복 변수
# 7 = 반복 변수
# 8 = 반복 변수
# 9 = 반복 변수

for i in range(0, 10, 3):
    print(str(i), "= 반복 변수")
# 0 = 반복 변수
# 3 = 반복 변수
# 6 = 반복 변수
# 9 = 반복 변수


# ! (3) for 반복문: 리스트와 범위 조합하기
array = [273, 32, 103, 57, 52]

for i in range(len(array)):
    print("{}번째 반복: {}".format(i + 1, array[i]))
# 1번째 반복: 273
# 2번째 반복: 32
# 3번째 반복: 103
# 4번째 반복: 57
# 5번째 반복: 52


# ! (4) for 반복문: 반대로 반복하기
# ? 1) range() 함수의 매개변수를 세 개 사용하는 방법법
for i in range(4, 0 - 1, -1):
    print("현재 반복 변수: {}".format(i))
# 현재 반복 변수: 4
# 현재 반복 변수: 3
# 현재 반복 변수: 2
# 현재 반복 변수: 1
# 현재 반복 변수: 0

# ? 2) reversed() 함수를 사용하는 방법
for i in reversed(range(5)):
    print("현재 반복 변수: {}".format(i))
# 현재 반복 변수: 4
# 현재 반복 변수: 3
# 현재 반복 변수: 2
# 현재 반복 변수: 1
# 현재 반복 변수: 0


# ! (5) 중첩 반복문 피라미드 만들기
output = ""

for i in range(1, 10):
    for j in range(0, i):
        output += "*"
    output += "\n"

print(output)
# *
# **
# ***
# ****
# *****
# ******
# *******
# ********
# *********

output = ""

for i in range(1, 15):
    for j in range(14, i, -1):
        output += " "
    for k in range(0, 2 * i - 1):
        output += "*"
    output += "\n"

print(output)
#              *
#             ***
#            *****
#           *******
#          *********
#         ***********
#        *************
#       ***************
#      *****************
#     *******************
#    *********************
#   ***********************
#  *************************
# ***************************

# ! (6) while 반복문: for 반복문처럼 사용하기
i = 0
while i < 10:
    print("{}번째 반복문입니다.".format(i))
    i += 1
# 0번째 반복문입니다.
# 1번째 반복문입니다.
# 2번째 반복문입니다.
# 3번째 반복문입니다.
# 4번째 반복문입니다.
# 5번째 반복문입니다.
# 6번째 반복문입니다.
# 7번째 반복문입니다.
# 8번째 반복문입니다.
# 9번째 반복문입니다.


# ! (7) while 반복문: 상태를 기반으로 반복하기
list_test = [1, 2, 1, 2]
value = 2

while value in list_test:
    list_test.remove(value)

print(list_test)
[1, 1]


# ! (8) while 반복문: 시간을 기반으로 반복하기
import time

number = 0

target_tick = time.time() + 2
while time.time() < target_tick:
    number += 1

print("2초 동안 {}번 반복했습니다.".format(number))
# 2초 동안 18299210번 반복했습니다.


# ! (9) while 반복문: break 키워드/continue 키워드
# ? break 키워드는 반복문을 벗어날 때 사용하는 키워드임. 일반적으로 무한 반복문을 만들고, 내부의 반복을 벗어날 때 많이 사용함.

i = 0
while True:
    print("{}번째 반복문입니다.".format(i))
    i += 1
    if i == 5 :
        print("반복문을 종료합니다.")
        break
# 0번째 반복문입니다.
# 1번째 반복문입니다.
# 2번째 반복문입니다.
# 3번째 반복문입니다.
# 4번째 반복문입니다.
# 반복문을 종료합니다.

# ? continue 키워드는 현재 반복을 생략하고, 다음 반복으로 넘어갈때 사용하는 키워드임.

numbers = [5, 15, 6, 20, 7, 25]

for number in numbers:
    if number < 10:
        continue
    print(number)
# 15
# 20
# 25